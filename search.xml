<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>双色球数据更新及数据库使用</title>
      <link href="2021/04/15/%E5%8F%8C%E8%89%B2%E7%90%83%E6%95%B0%E6%8D%AE%E6%9B%B4%E6%96%B0%E5%8F%8A%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%BF%E7%94%A8/"/>
      <url>2021/04/15/%E5%8F%8C%E8%89%B2%E7%90%83%E6%95%B0%E6%8D%AE%E6%9B%B4%E6%96%B0%E5%8F%8A%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<ol><li><p>解析网站并获取数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 彩票数据所在的url</span></span><br><span class="line">url = <span class="string">&#x27;http://datachart.500.com/ssq/&#x27;</span></span><br><span class="line"><span class="comment"># 提取数据</span></span><br><span class="line">response = requests.get(url, headers=&#123;<span class="string">&quot;User-Agent&quot;</span>: UserAgent().chrome&#125;)</span><br><span class="line"><span class="comment"># 通过xpath去解析</span></span><br><span class="line">e = etree.HTML(response.text)</span><br><span class="line">date_times = e.xpath(<span class="string">&#x27;//tbody[@id=&quot;tdata&quot;]/tr/td[1]/text()&#x27;</span>)</span><br><span class="line">trs = e.xpath(<span class="string">&#x27;//tbody[@id=&quot;tdata&quot;]/tr[not(@class)]&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>链接数据库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 链接数据库</span></span><br><span class="line">client = pymysql.connect(host=<span class="string">&#x27;localhost&#x27;</span>, port=<span class="number">3306</span>, user=<span class="string">&#x27;root&#x27;</span>, password=<span class="string">&#x27;123456&#x27;</span>, charset=<span class="string">&#x27;utf8&#x27;</span>, db=<span class="string">&#x27;bangumi&#x27;</span>)</span><br><span class="line">cursor = client.cursor()</span><br></pre></td></tr></table></figure></li><li><p>普通获取数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 插入数据的sql</span></span><br><span class="line">sql = <span class="string">&#x27;insert into doubleballs values(0,%s,%s,%s)&#x27;</span></span><br><span class="line"><span class="keyword">for</span> data_time, tr <span class="keyword">in</span> <span class="built_in">zip</span>(date_times, trs):</span><br><span class="line">    red_ball = <span class="string">&#x27;-&#x27;</span>.join(tr.xpath(<span class="string">&#x27;./td[@class=&quot;chartBall01&quot;]/text()&#x27;</span>))</span><br><span class="line">    blue_ball = tr.xpath(<span class="string">&#x27;./td[@class=&quot;chartBall02&quot;]/text()&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    print(<span class="string">&quot;第&quot;</span> + data_time + <span class="string">&quot;红球是：&quot;</span> + red_ball + <span class="string">&quot; 蓝球：&quot;</span> + blue_ball)</span><br><span class="line">    cursor.execute(sql, [data_time, red_ball, blue_ball])</span><br><span class="line">    client.commit()</span><br></pre></td></tr></table></figure></li><li><p>更新数据这部分从数据库中获取数据，然后反转顺序，index作为计数器，循环遍历假如有新数据要更新，那result返回值为0，index+1。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看数据是否存在</span></span><br><span class="line">select_new_sql = <span class="string">&quot;select * from doubleballs where date_time = %s&quot;</span></span><br><span class="line">date_times.reverse()</span><br><span class="line"><span class="comment"># 记录有多少条新数据</span></span><br><span class="line">index = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> data_time <span class="keyword">in</span> date_times:</span><br><span class="line">    result = cursor.execute(select_new_sql, [data_time])</span><br><span class="line">    <span class="comment"># 判断数据是否存在</span></span><br><span class="line">    <span class="keyword">if</span> result == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    index+=<span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>数据顺序反转，按照网站上xpath写法获取第1个数据，即最新的数据放到数据库中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据从新到旧排序</span></span><br><span class="line">trs.reverse()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(index):</span><br><span class="line">    <span class="comment"># 提取红球</span></span><br><span class="line">    red_ball = <span class="string">&#x27;-&#x27;</span>.join(trs[i].xpath(<span class="string">&#x27;./td[@class=&quot;chartBall01&quot;]/text()&#x27;</span>))</span><br><span class="line">    <span class="comment"># 提取蓝球</span></span><br><span class="line">    blue_ball = trs[i].xpath(<span class="string">&#x27;./td[@class=&quot;chartBall02&quot;]/text()&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    print(<span class="string">&quot;第&quot;</span> + date_times[i] + <span class="string">&quot;红球是：&quot;</span> + red_ball + <span class="string">&quot; 蓝球：&quot;</span> + blue_ball)</span><br><span class="line">    cursor.execute(sql, [date_times[i], red_ball, blue_ball])</span><br><span class="line">    client.commit()</span><br></pre></td></tr></table></figure></li><li><p>完整代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> fake_useragent <span class="keyword">import</span> UserAgent</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> html</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line">etree = html.etree</span><br><span class="line"><span class="comment"># 彩票数据所在的url</span></span><br><span class="line">url = <span class="string">&#x27;http://datachart.500.com/ssq/&#x27;</span></span><br><span class="line"><span class="comment"># 提取数据</span></span><br><span class="line">response = requests.get(url, headers=&#123;<span class="string">&quot;User-Agent&quot;</span>: UserAgent().chrome&#125;)</span><br><span class="line"><span class="comment"># 通过xpath去解析</span></span><br><span class="line">e = etree.HTML(response.text)</span><br><span class="line">date_times = e.xpath(<span class="string">&#x27;//tbody[@id=&quot;tdata&quot;]/tr/td[1]/text()&#x27;</span>)</span><br><span class="line">trs = e.xpath(<span class="string">&#x27;//tbody[@id=&quot;tdata&quot;]/tr[not(@class)]&#x27;</span>)</span><br><span class="line"><span class="comment"># 链接数据库</span></span><br><span class="line">client = pymysql.connect(host=<span class="string">&#x27;localhost&#x27;</span>, port=<span class="number">3306</span>, user=<span class="string">&#x27;root&#x27;</span>, password=<span class="string">&#x27;123456&#x27;</span>, charset=<span class="string">&#x27;utf8&#x27;</span>, db=<span class="string">&#x27;bangumi&#x27;</span>)</span><br><span class="line">cursor = client.cursor()</span><br><span class="line"><span class="comment"># 插入数据的sql</span></span><br><span class="line">sql = <span class="string">&#x27;insert into doubleballs values(0,%s,%s,%s)&#x27;</span></span><br><span class="line"><span class="comment"># 查看数据是否存在</span></span><br><span class="line">select_new_sql = <span class="string">&quot;select * from doubleballs where date_time = %s&quot;</span></span><br><span class="line">date_times.reverse()</span><br><span class="line"><span class="comment"># 记录有多少条新数据</span></span><br><span class="line">index = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> data_time <span class="keyword">in</span> date_times:</span><br><span class="line">    reslut = cursor.execute(select_new_sql, [data_time])</span><br><span class="line">    <span class="comment"># 判断数据是否存在</span></span><br><span class="line">    <span class="keyword">if</span> reslut == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    index += <span class="number">1</span></span><br><span class="line"><span class="comment"># 数据从新到旧排序</span></span><br><span class="line">trs.reverse()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(index):</span><br><span class="line">    <span class="comment"># 提取红球</span></span><br><span class="line">    red_ball = <span class="string">&#x27;-&#x27;</span>.join(trs[i].xpath(<span class="string">&#x27;./td[@class=&quot;chartBall01&quot;]/text()&#x27;</span>))</span><br><span class="line">    <span class="comment"># 提取蓝球</span></span><br><span class="line">    blue_ball = trs[i].xpath(<span class="string">&#x27;./td[@class=&quot;chartBall02&quot;]/text()&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    print(<span class="string">&quot;第&quot;</span> + date_times[i] + <span class="string">&quot;红球是：&quot;</span> + red_ball + <span class="string">&quot; 蓝球：&quot;</span> + blue_ball)</span><br><span class="line">    cursor.execute(sql, [date_times[i], red_ball, blue_ball])</span><br><span class="line">    client.commit()</span><br><span class="line"><span class="comment"># for data_time, tr in zip(date_times, trs):</span></span><br><span class="line"><span class="comment">#     red_ball = &#x27;-&#x27;.join(tr.xpath(&#x27;./td[@class=&quot;chartBall01&quot;]/text()&#x27;))</span></span><br><span class="line"><span class="comment">#     blue_ball = tr.xpath(&#x27;./td[@class=&quot;chartBall02&quot;]/text()&#x27;)[0]</span></span><br><span class="line"><span class="comment">#     print(&quot;第&quot; + data_time + &quot;红球是：&quot; + red_ball + &quot; 蓝球：&quot; + blue_ball)</span></span><br><span class="line"><span class="comment">#     cursor.execute(sql, [data_time, red_ball, blue_ball])</span></span><br><span class="line"><span class="comment">#     client.commit()</span></span><br><span class="line">cursor.close()</span><br><span class="line">client.close()</span><br></pre></td></tr></table></figure></li><li><p>这样排序会让更新之后最新的在数据最后，但是一开始排序的时候不会出现问题，是从新到旧的排序。于是因为有点强迫症，最后还是改成从旧到新排序。只需要改动几行代码即可，反转数据在提取红球蓝球数据前，保证数据最新，判断时每次存在就让<code>index+1</code>，之后加入<code>index = count - index</code>其中<code>count = data_time.__len__()</code>。接着将循环中的<code>i</code>变成<code>index-i-1</code>。最终代码如下，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> fake_useragent <span class="keyword">import</span> UserAgent</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> html</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line">etree = html.etree</span><br><span class="line"><span class="comment"># 彩票数据所在的url</span></span><br><span class="line">url = <span class="string">&#x27;http://datachart.500.com/ssq/&#x27;</span></span><br><span class="line"><span class="comment"># 提取数据</span></span><br><span class="line">response = requests.get(url, headers=&#123;<span class="string">&quot;User-Agent&quot;</span>: UserAgent().chrome&#125;)</span><br><span class="line"><span class="comment"># 通过xpath去解析</span></span><br><span class="line">e = etree.HTML(response.text)</span><br><span class="line">date_times = e.xpath(<span class="string">&#x27;//tbody[@id=&quot;tdata&quot;]/tr/td[1]/text()&#x27;</span>)</span><br><span class="line">trs = e.xpath(<span class="string">&#x27;//tbody[@id=&quot;tdata&quot;]/tr[not(@class)]&#x27;</span>)</span><br><span class="line">count =date_times.__len__()</span><br><span class="line"><span class="comment"># 链接数据库</span></span><br><span class="line">client = pymysql.connect(host=<span class="string">&#x27;localhost&#x27;</span>, port=<span class="number">3306</span>, user=<span class="string">&#x27;root&#x27;</span>, password=<span class="string">&#x27;123456&#x27;</span>, charset=<span class="string">&#x27;utf8&#x27;</span>, db=<span class="string">&#x27;bangumi&#x27;</span>)</span><br><span class="line">cursor = client.cursor()</span><br><span class="line"><span class="comment"># 插入数据的sql</span></span><br><span class="line">sql = <span class="string">&#x27;insert into doubleballs values(0,%s,%s,%s)&#x27;</span></span><br><span class="line"><span class="comment"># 查看数据是否存在</span></span><br><span class="line">select_new_sql = <span class="string">&quot;select * from doubleballs where date_time = %s&quot;</span></span><br><span class="line"><span class="comment"># date_times.reverse()</span></span><br><span class="line"><span class="comment"># 记录有多少条新数据</span></span><br><span class="line">index = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> data_time <span class="keyword">in</span> date_times:</span><br><span class="line">    reslut = cursor.execute(select_new_sql, [data_time])</span><br><span class="line">    <span class="comment"># 判断数据是否存在</span></span><br><span class="line">    <span class="keyword">if</span> reslut == <span class="number">1</span>:</span><br><span class="line">        index += <span class="number">1</span></span><br><span class="line">index = count - index</span><br><span class="line"><span class="comment"># 数据从新到旧排序</span></span><br><span class="line"><span class="comment"># trs.reverse()</span></span><br><span class="line">date_times.reverse()</span><br><span class="line">trs.reverse()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(index):</span><br><span class="line">    <span class="comment"># 提取红球</span></span><br><span class="line">    red_ball = <span class="string">&#x27;-&#x27;</span>.join(trs[index-i-<span class="number">1</span>].xpath(<span class="string">&#x27;./td[@class=&quot;chartBall01&quot;]/text()&#x27;</span>))</span><br><span class="line">    <span class="comment"># 提取蓝球</span></span><br><span class="line">    blue_ball = trs[index-i-<span class="number">1</span>].xpath(<span class="string">&#x27;./td[@class=&quot;chartBall02&quot;]/text()&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    print(<span class="string">&quot;第&quot;</span> + date_times[index-i-<span class="number">1</span>] + <span class="string">&quot;红球是：&quot;</span> + red_ball + <span class="string">&quot; 蓝球：&quot;</span> + blue_ball)</span><br><span class="line">    cursor.execute(sql, [date_times[index-i-<span class="number">1</span>], red_ball, blue_ball])</span><br><span class="line">    client.commit()</span><br><span class="line"><span class="comment"># for data_time, tr in zip(date_times, trs):</span></span><br><span class="line"><span class="comment">#     red_ball = &#x27;-&#x27;.join(tr.xpath(&#x27;./td[@class=&quot;chartBall01&quot;]/text()&#x27;))</span></span><br><span class="line"><span class="comment">#     blue_ball = tr.xpath(&#x27;./td[@class=&quot;chartBall02&quot;]/text()&#x27;)[0]</span></span><br><span class="line"><span class="comment">#     print(&quot;第&quot; + data_time + &quot;红球是：&quot; + red_ball + &quot; 蓝球：&quot; + blue_ball)</span></span><br><span class="line"><span class="comment">#     cursor.execute(sql, [data_time, red_ball, blue_ball])</span></span><br><span class="line"><span class="comment">#     client.commit()</span></span><br><span class="line">cursor.close()</span><br><span class="line">client.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>树莓派建立MySQL服务</title>
      <link href="2021/04/15/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%BB%BA%E7%AB%8BMySQL%E6%9C%8D%E5%8A%A1/"/>
      <url>2021/04/15/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%BB%BA%E7%AB%8BMySQL%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h3 id="1-材料"><a href="#1-材料" class="headerlink" title="1.材料"></a>1.材料</h3><ol><li>树莓派4</li><li>系统版本2020-05-27-raspbian</li><li>win10电脑</li></ol><h3 id="2-安装前先对树莓派更新源文件"><a href="#2-安装前先对树莓派更新源文件" class="headerlink" title="2.安装前先对树莓派更新源文件"></a>2.安装前先对树莓派更新源文件</h3><p><code>$ sudo apt-get update</code><br><code>$ sudo apt-get upgrade</code></p><p>当运行apt-get update命令的时候，实际上相当于软件管家的“查找更新”操作。它会同步 /etc/apt/sources.list 和 /etc/apt/sources.list.d 中列出的源的索引信息（软件包的版本信息、系统要求、翻译、依赖关系等等）。</p><p>当运行apt-get upgrade命令的时候，实际上相当于软件管家的“一键更新”操作。它会对已经安装有更新的软件进行自动升级。由于确定要更新的软件包需要对本地安装的版本和列表的版本进行比较，所以要在update以后运行这一条。</p><h3 id="3-安装MySQL-server"><a href="#3-安装MySQL-server" class="headerlink" title="3.安装MySQL server"></a>3.安装MySQL server</h3><p><code>$ sudo apt-get install mariadb-server-10.0</code></p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/6V%7DHIOZ~I0VHK2R%5B15N@0Q4.png#shadow" alt="img"></p><h3 id="4-安装完毕之后登陆数据库"><a href="#4-安装完毕之后登陆数据库" class="headerlink" title="4.安装完毕之后登陆数据库"></a>4.安装完毕之后登陆数据库</h3><p><code>$ sudo su root</code>切换成root用户</p><p>接着输入mysql出现下图即为成功</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813100911239.png#shadow" alt="image-20200813100911239"></p><p>登陆之后连接登陆MySQL</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在数据库中使用</span></span><br><span class="line"><span class="comment"># 进入mysql</span></span><br><span class="line">MariaDB [(none)]&gt; <span class="keyword">use</span> <span class="title">mysql</span>;</span><br><span class="line"><span class="comment"># 修改密码</span></span><br><span class="line">MariaDB [mysql]&gt; update user set plugin=<span class="string">&#x27;mysql_native_password&#x27;</span> where user=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">MariaDB [mysql]&gt; UPDATE user SET password=PASSWORD(<span class="string">&#x27;root的密码&#x27;</span>) WHERE user=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">MariaDB [mysql]&gt; flush privileges;</span><br><span class="line">MariaDB [mysql]&gt; <span class="keyword">exit</span>;</span><br></pre></td></tr></table></figure><h3 id="5-操作MySQL的一些方式"><a href="#5-操作MySQL的一些方式" class="headerlink" title="5.操作MySQL的一些方式"></a>5.操作MySQL的一些方式</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /etc/init.d/mysql restart</span><br><span class="line"><span class="comment"># mysql的其他操作    status、start、stop、restart</span></span><br></pre></td></tr></table></figure><h3 id="6-开启远程访问"><a href="#6-开启远程访问" class="headerlink" title="6.开启远程访问"></a>6.开启远程访问</h3><h4 id="1-允许远程登录"><a href="#1-允许远程登录" class="headerlink" title="1. 允许远程登录"></a>1. 允许远程登录</h4>   <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/mysql/mariadb.conf.d/<span class="number">50</span>-server.cnf</span><br><span class="line"><span class="comment"># 将bind-address这行注释掉</span></span><br><span class="line"><span class="comment"># 或者将127.0.0.1 这个值改为0.0.0.0</span></span><br><span class="line"><span class="comment"># 然后重启</span></span><br><span class="line">$ sudo /etc/init.d/mysql restart</span><br></pre></td></tr></table></figure><h4 id="2-设置账号权限"><a href="#2-设置账号权限" class="headerlink" title="2. 设置账号权限"></a>2. 设置账号权限</h4>   <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -u root -p</span><br><span class="line"><span class="comment"># 登不进去可以先sudo su root 接着输入mysql    </span></span><br><span class="line">$ 输入密码</span><br><span class="line">MariaDB [(none)]&gt; <span class="keyword">use</span> <span class="title">mysql</span>;</span><br><span class="line">MariaDB [mysql]&gt; GRANT ALL PRIVILEGES ON *.* TO <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;root的密码&#x27;</span> WITH GRANT OPTION;</span><br><span class="line">MariaDB [mysql]&gt; flush privileges;</span><br></pre></td></tr></table></figure><p>如下图所示：</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813103224567.png#shadow" alt="image-20200813103224567"></p><h3 id="7-使用Navicat实现远程访问"><a href="#7-使用Navicat实现远程访问" class="headerlink" title="7.使用Navicat实现远程访问"></a>7.使用Navicat实现远程访问</h3><h4 id="1-下载并注册Navicat"><a href="#1-下载并注册Navicat" class="headerlink" title="1.下载并注册Navicat"></a>1.下载并注册Navicat</h4><ul><li><p><strong>下载Navicat Premium</strong></p><p> [button href=”<a href="https://www.navicat.com.cn/&quot;]Navicat%E5%AE%98%E7%BD%91[/button]">https://www.navicat.com.cn/&quot;]Navicat官网[/button]</a></p></li><li><p><strong>注册机下载（Navicat15）</strong></p></li></ul><p>[file href=”<a href="https://pan.baidu.com/s/1L0AKNw1KKU55fVkDz5N2gg&quot;]%E7%99%BE%E5%BA%A6%E4%BA%91">https://pan.baidu.com/s/1L0AKNw1KKU55fVkDz5N2gg&quot;]百度云</a> 提取码：9nuz Navicat 15 注册机[/file]</p><p>[file href=”<a href="https://www.jianguoyun.com/p/DeTIex4QjqWwBxiyyLMD&quot;]%E5%9D%9A%E6%9E%9C%E4%BA%91">https://www.jianguoyun.com/p/DeTIex4QjqWwBxiyyLMD&quot;]坚果云</a> Navicat 15 注册机[/file]</p><ul><li><p><strong>安装好Navicat</strong></p></li><li><p><strong>使用管理员权限打开注册机</strong></p></li><li><p><strong>点击patch，找到navicat下载的目录选择navicat，点击打开</strong><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813111227815.png#shadow" alt="image-20200813111227815"></p></li><li><p><strong>显示下图即是破解成功</strong></p><p> <img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813111502584.png#shadow" alt="image-20200813111502584"></p></li><li><p><strong>点击Generate</strong></p></li><li><p><strong>出现序列码点击copy</strong></p><p> <img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813111557846.png#shadow" alt="image-20200813111557846"></p></li><li><p><strong>然后打开Navicat</strong></p></li><li><p><strong>打开之后点击注册</strong></p><p>  输入序列码</p></li><li><p><strong>点击手动激活</strong><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813111717644.png#shadow" alt="image-20200813111717644"></p></li><li><p><strong>之后会生成一长串请求码</strong><br><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813111927205.png#shadow" alt="image-20200813111927205"></p></li><li><p><strong>把返回的激活码复制粘贴到Navicat</strong><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813112017854.png#shadow" alt="image-20200813112017854"></p></li><li><p><strong>点击激活，再次打开就可以发现已经激活成功了</strong></p><h4 id="2-建立远程访问"><a href="#2-建立远程访问" class="headerlink" title="2.建立远程访问"></a>2.建立远程访问</h4></li><li><p><strong>右键project1选择  新建连接  选择MySQL</strong></p></li></ul><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813115635524.png#shadow" alt="image-20200813115635524"></p><ul><li><p><strong>填入相关信息  然后选择连接</strong><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813115821325.png#shadow" alt="image-20200813115821325"></p></li><li><p><strong>至此已经完成在树莓派4上建立MySQL数据库并实现远程访问</strong></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>实现树莓派的串口通信</title>
      <link href="2021/04/15/%E5%AE%9E%E7%8E%B0%E6%A0%91%E8%8E%93%E6%B4%BE%E7%9A%84%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/"/>
      <url>2021/04/15/%E5%AE%9E%E7%8E%B0%E6%A0%91%E8%8E%93%E6%B4%BE%E7%9A%84%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<ul><li>材料<ol><li>树莓派4</li><li>win 10</li><li>minicom串口助手测试</li></ol></li></ul><h3 id="1-打通树莓派的串口通讯"><a href="#1-打通树莓派的串口通讯" class="headerlink" title="1.打通树莓派的串口通讯"></a>1.打通树莓派的串口通讯</h3><h4 id="1-外设IO口定义说明"><a href="#1-外设IO口定义说明" class="headerlink" title="1.外设IO口定义说明"></a>1.外设IO口定义说明</h4><p>从树莓派的相关资料我们可以看到，树莓派有两个串口可以使用，一个是硬件串口（/dev/ttyAMA0）,另一个是mini串口（/dev/ttyS0）。硬件串口有单独的波特率时钟源，性能好，稳定性强；mini串口功能简单，稳定性较差，波特率由CPU内核时钟提供，受内核时钟影响。</p><p>树莓派（3/4代）板载蓝牙模块，默认的硬件串口是分配给蓝牙模块使用的，而性能较差的mini串口是分配给GPIO串口 TXD0、RXD0。</p><p><strong>在开始前说明以下几点：</strong></p><ol><li>树莓派UART端口的位置：TXD位于HEAD-8；RXD位于HEAD-10；GND位于HEAD-6（可选其他GND，14也可）。</li><li>树莓派的TXD应接USB转串口设备的RXD，当然如果测试失败请交换RXD和TXD的顺序。</li></ol><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813150449021.png#shadow" alt="image-20200813150449021"></p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813150508625.png#shadow" alt="image-20200813150508625"></p><h4 id="2-修改串口映射"><a href="#2-修改串口映射" class="headerlink" title="2.修改串口映射"></a>2.修改串口映射</h4><ul><li>serial配置</li></ul><p>输入命令<code>$ ls /dev -al</code>查看默认的串口分配方式，如下图所示</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813150805190.png#shadow" alt="image-20200813150805190"></p><p>由于硬件串口分配给板载蓝牙使用，所以要释放掉，并设置硬件串口分配给GPIO串口</p><p>首先登陆终端后，输入<code>sudo raspi-config</code>命令进入树莓派的系统配置界面，选择第五个选项</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813151014333.png#shadow" alt="image-20200813151014333"></p><p>接着进入p6 Serial，如下图所示</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813151120464.png#shadow" alt="image-20200813151120464"></p><p>选择关闭串口登陆功能，打开硬件串口调试功能</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813151211605.png#shadow" alt="image-20200813151211605"></p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813151238559.png#shadow" alt="image-20200813151238559"></p><p>完成后出现下图的提示界面，即为OK</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813151312912.png#shadow" alt="image-20200813151312912"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">serial0                  GPIO</span><br><span class="line">serial1                  蓝牙模块</span><br></pre></td></tr></table></figure><h4 id="3-设置硬件串口为GPIO串口"><a href="#3-设置硬件串口为GPIO串口" class="headerlink" title="3.设置硬件串口为GPIO串口"></a>3.设置硬件串口为GPIO串口</h4><p>接着将串口配置为GPIO串口</p><p>输入<code>$ sudo vim /boot/config.txt</code>命令</p><p>进入vim编辑</p><p>将</p><p><code>dtoverlay=pi3-miniuart-bt</code></p><p>和</p><p><code>force_turbo=1</code></p><p>写入到最后，如下图</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813152200492.png#shadow" alt="image-20200813152200492"></p><p>保存后退出vim</p><p><strong>重启树莓派</strong>，输入<code>ls /dev -al</code>,可以发现此时两个串口已经互相换了位置，如下图</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813152721103.png#shadow" alt="image-20200813152721103"></p><h4 id="4-禁用控制台功能"><a href="#4-禁用控制台功能" class="headerlink" title="4.禁用控制台功能"></a>4.禁用控制台功能</h4><p><code>$ sudo systemctl stop serial-getty@ttyAMA0.service</code></p><p><code>$ sudo systemctl disable serial-getty@ttyAMA0.service</code></p><h4 id="5-查看波特率"><a href="#5-查看波特率" class="headerlink" title="5.查看波特率"></a>5.查看波特率</h4><p><code>$ sudo stty -F /dev/ttyAMA0</code></p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813153639268.png#shadow" alt="image-20200813153639268"></p><p>波特率需要是9600，假如不是9600就要修改</p><h4 id="6-修改波特率"><a href="#6-修改波特率" class="headerlink" title="6.修改波特率"></a>6.修改波特率</h4><p><code>$ sudo vim /boot/cmdline.txt</code></p><p>删除<code>console=serial0,115200</code>字段</p><p>重启树莓派，再次查看波特率</p><p><strong>上面所有配置完成之后，可以使用树莓派与其他硬件进行串口通信了。</strong></p><h3 id="2-利用minicom串口助手测试"><a href="#2-利用minicom串口助手测试" class="headerlink" title="2.利用minicom串口助手测试"></a>2.利用minicom串口助手测试</h3><h4 id="在树莓派上安装配置minicom"><a href="#在树莓派上安装配置minicom" class="headerlink" title="在树莓派上安装配置minicom"></a>在树莓派上安装配置minicom</h4><ul><li>安装minicom</li></ul><p>输入<code>sudo apt-get install minicom</code>安装</p><ul><li>配置minicom</li></ul><p>输入<code>sudo minicom -s</code>选择第三个<code>Serial port setup</code></p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813161016652.png#shadow" alt="image-20200813161016652"></p><p>进入配置界面之后</p><p>将输入<code>A</code>  将<code>Serial Device</code>中的端口修改成<code>/dev/ttyAMA0</code></p><p>同样输入<code>E</code> 按照提示选择9600</p><p>配置完如下图所示：</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813161353732.png#shadow" alt="image-20200813161353732"></p><p>敲下回车确认，并选择<code>Save setup as dfl</code>将配置改为minicom的默认配置</p><p>出现下图则为配置成功：</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813161509554.png#shadow" alt="image-20200813161509554"></p><p>最后选择<code>Exit from minicom</code>退出minicom</p><h4 id="在pc端下载SSCOM串口调试助手"><a href="#在pc端下载SSCOM串口调试助手" class="headerlink" title="在pc端下载SSCOM串口调试助手"></a>在pc端下载SSCOM串口调试助手</h4><p>将树莓派的IO口通过USB转TTL模块接到PC端上，打开串口调试助手</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813161716331.png#shadow" alt="image-20200813161716331"></p><p>选择端口，我这是<code>COM5</code>，然后将波特率调整为9600</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813161817487.png#shadow" alt="image-20200813161817487"></p><p>最后选中端口，打开串口</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813161855846.png#shadow" alt="image-20200813161855846"></p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813161910441.png#shadow" alt="image-20200813161910441"></p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><h5 id="测试一："><a href="#测试一：" class="headerlink" title="测试一："></a>测试一：</h5><p>在PC端输入值并点击发送，</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813162051762.png#shadow" alt="image-20200813162051762"></p><p>可以看到在树莓派上接收到了相应的字符串</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813162118812.png#shadow" alt="image-20200813162118812"></p><h5 id="测试二："><a href="#测试二：" class="headerlink" title="测试二："></a>测试二：</h5><p>在树莓派界面随意敲下字符，</p><p>可以从PC端的串口调试工具中看到每个输入的字符，以单个字符的形式接收。</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20200813162310160.png#shadow" alt="image-20200813162310160"></p><h3 id="3-最后"><a href="#3-最后" class="headerlink" title="3.最后"></a>3.最后</h3><p>到这里已经实现了树莓派的串口通讯，但是这种方法仅是测试用，要实现硬件通讯抛开PC端和PC外设的控制处理，这就要等之后利用python去实现，这方面的等之后再讲。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>爬取数据时遭遇动态滚动条</title>
      <link href="2021/04/15/%E7%88%AC%E5%8F%96%E6%95%B0%E6%8D%AE%E6%97%B6%E9%81%AD%E9%81%87%E5%8A%A8%E6%80%81%E6%BB%9A%E5%8A%A8%E6%9D%A1/"/>
      <url>2021/04/15/%E7%88%AC%E5%8F%96%E6%95%B0%E6%8D%AE%E6%97%B6%E9%81%AD%E9%81%87%E5%8A%A8%E6%80%81%E6%BB%9A%E5%8A%A8%E6%9D%A1/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建chrome浏览器驱动，无头模式</span></span><br><span class="line">chrome_options = Options()</span><br><span class="line"><span class="comment"># chrome_options.add_argument(&#x27;--headless&#x27;)</span></span><br><span class="line">chrome_options.add_argument(<span class="string">&quot;--start-maximized&quot;</span>);</span><br><span class="line">driver = webdriver.Chrome(<span class="string">&quot;D://googleDever//chromedriver.exe&quot;</span>,chrome_options=chrome_options)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载界面</span></span><br><span class="line">driver.get(<span class="string">&quot;https://wenku.baidu.com/search?lm=0&amp;od=0&amp;ie=utf-8&amp;word=csdn&quot;</span>)</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取页面初始高度</span></span><br><span class="line">js = <span class="string">&quot;return action=document.body.scrollHeight&quot;</span></span><br><span class="line">height = driver.execute_script(js)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将滚动条调整至页面底部</span></span><br><span class="line">driver.execute_script(<span class="string">&#x27;window.scrollTo(0, document.body.scrollHeight)&#x27;</span>)</span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义初始时间戳（秒）</span></span><br><span class="line">t1 = <span class="built_in">int</span>(time.time())</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义循环标识，用于终止while循环</span></span><br><span class="line">status = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重试次数</span></span><br><span class="line">num=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> status:</span><br><span class="line"><span class="comment"># 获取当前时间戳（秒）</span></span><br><span class="line">    t2 = <span class="built_in">int</span>(time.time())</span><br><span class="line">    <span class="comment"># 判断时间初始时间戳和当前时间戳相差是否大于30秒，小于30秒则下拉滚动条</span></span><br><span class="line">    <span class="keyword">if</span> t2-t1 &lt; <span class="number">30</span>:</span><br><span class="line">        new_height = driver.execute_script(js)</span><br><span class="line">        <span class="keyword">if</span> new_height &gt; height :</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">            driver.execute_script(<span class="string">&#x27;window.scrollTo(0, document.body.scrollHeight)&#x27;</span>)</span><br><span class="line">            <span class="comment"># 重置初始页面高度</span></span><br><span class="line">            height = new_height</span><br><span class="line">            <span class="comment"># 重置初始时间戳，重新计时</span></span><br><span class="line">            t1 = <span class="built_in">int</span>(time.time())</span><br><span class="line">    <span class="keyword">elif</span> num &lt; <span class="number">3</span>:                        <span class="comment"># 当超过30秒页面高度仍然没有更新时，进入重试逻辑，重试3次，每次等待30秒</span></span><br><span class="line">        time.sleep(<span class="number">3</span>)</span><br><span class="line">        num = num+<span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:    <span class="comment"># 超时并超过重试次数，程序结束跳出循环，并认为页面已经加载完毕！</span></span><br><span class="line">        print(<span class="string">&quot;滚动条已经处于页面最下方！&quot;</span>)</span><br><span class="line">        status = <span class="literal">False</span></span><br><span class="line">        <span class="comment"># 滚动条调整至页面顶部</span></span><br><span class="line">        driver.execute_script(<span class="string">&#x27;window.scrollTo(0, 0)&#x27;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">        </span><br><span class="line"><span class="comment"># 打印页面源码</span></span><br><span class="line">content = driver.page_source</span><br><span class="line">print(content)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>利用hexo+github+coding 建立博客</title>
      <link href="2021/04/15/%E5%88%A9%E7%94%A8hexo+github+coding%20%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2/"/>
      <url>2021/04/15/%E5%88%A9%E7%94%A8hexo+github+coding%20%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>实现这个博客，是直接在github page平台上托管，由于国内访问的问题，又加了个coding page来实现国内外的不同访问。<br>话说回来国外谁会来看这个网站（笑），所以其实只在coding上托管也是ok的。<br>首先这样就可以安心的来写作，又不需要定期维护，而且hexo作为一个快速简洁的博客框架，用它来搭建博客真的非常容易。<br>接下来的内容以windows为主（因为个人用的Windows）至于linux，因为我找了很多教程文档，或许也会加入不少。<br>（由于一些原因导致本教程可能有些许缺失，有时间会更新）</p><h1 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h1><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。大家可以进入hexo官网进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。<br>教程分三个部分，</p><ul><li>第一部分：hexo的初级搭建还有部署到github page上，以及个人域名的绑定。  </li><li>第二部分：hexo的基本配置，更换主题，实现多终端工作，以及在coding page部署实现国内外分流。  </li><li>第三部分：hexo添加各种功能，包括搜索的SEO，阅读量统计，访问量统计和评论系统等。  <h1 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h1>Hexo的初级搭建还有部署到github page上，以及个人域名的绑定。    </li></ul><h2 id="搭建Hexo"><a href="#搭建Hexo" class="headerlink" title="搭建Hexo"></a>搭建Hexo</h2><ol><li>安装Git</li><li>安装Node.js</li><li>安装Hexo</li><li>GitHub创建个人仓库</li><li>生成SSH添加到GitHub</li><li>将hexo部署到GitHub</li><li>将hexo部署到Coding</li><li>设置个人域名</li><li>发布文章  </li></ol><h3 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1.安装Git"></a>1.安装Git</h3><p>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo博客文章，上传到GitHub的工具。<a href="https://www.liaoxuefeng.com/wiki/896043488029600">Git教程</a> 有兴趣可以了解一下（我反正不会）<br>windows：到git官网上下载,<a href="https://gitforwindows.org/">Download git</a>,下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。<br>linux：对linux来说实在是太简单了，因为最早的git就是在linux上编写的，只需要一行代码<code>sudo apt-get install git</code><br>安装好后，用<code>git --version </code>来查看一下版本</p><h3 id="2-安装Node-js"><a href="#2-安装Node-js" class="headerlink" title="2.安装Node.js"></a>2.安装Node.js</h3><p>Hexo是基于node.js编写的，所以需要安装一下node.js和里面的npm工具。<br>windows：nodejs选择LTS版本就行了。<br>linux：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure><p>安装完后，打开命令行<br><code>npm -v</code><br>检查一下有没有安装成功<br>windows在git安装完后，可以直接使用git bash来敲命令行，当然你要用cmd那也ok。  </p><h3 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h3><p>首先先新建一个文件夹作为个人博客的文件目录，名字自己定义，这里就称作博客文件夹。进入该文件夹后打开Git bash，开始安装hexo。（你可以用Git bash<code>cd</code>到这个文件夹下，或者在这个文件夹下直接右键git bash打开）  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli   #安装Hexo </span><br><span class="line">用hexo -v查看版本  </span><br><span class="line">然后hexo init    #Hexo自动在当前文件夹下下载搭建网站所需的所有文件（初始化hexo） </span><br><span class="line">接着是hexo install    #安装依赖包</span><br></pre></td></tr></table></figure><p>此时在blog文件夹中我们可以看到已经生成了搭建网站所需要的所有文件了<br>**<br>node_modules: 依赖包<br>public：存放生成的页面（这个得网站生成之后才会出现）<br>scaffolds：生成文章的一些模板<br>source：资源文件夹，用来存放你的文章<br>themes：主题<br>_config.yml: 博客的配置文件<br> .gitignore<br> package.json<br>**<br>现在一个简单的个人博客已经创建完毕，可以用<code>hexo generate</code>命令来生成静态网页。然后通过<code>hexo server</code>命令启动本地服务器来预览一下hexo为我们提供的最原始博客页面。这两个命令也可以简写如下<code>hexo g</code>和<code>hexo s</code>。<br>浏览器访问 <a href="http://localhost:4000/%EF%BC%8C%E6%AD%A4%E6%97%B6%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%9C%8B%E8%A7%81%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%8D%9A%E5%AE%A2%E9%A1%B5%E9%9D%A2%E3%80%82%E8%AF%A5%E9%A1%B5%E9%9D%A2%E6%AD%A3%E6%98%AFsource%E7%9B%AE%E5%BD%95%E4%B8%8Bhello-world.md%E6%96%87%E4%BB%B6%E7%94%9F%E6%88%90%E7%9A%84%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5%E3%80%82">http://localhost:4000/，此时就可以看见一个简单的博客页面。该页面正是source目录下hello-world.md文件生成的静态网页。</a>   </p><h3 id="4-Git创建个人仓库"><a href="#4-Git创建个人仓库" class="headerlink" title="4.Git创建个人仓库"></a>4.Git创建个人仓库</h3><p>首先，你先要有一个GitHub账户，没有的话去注册一个，当然不打算用github只用coding可以跳过。<br>注册完登录后，在GitHub.com中看到一个New repository，新建仓库。<br>创建一个和你用户名相同的仓库，后面加.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是xxxx.github.io，其中xxx就是你注册GitHub的用户名。<br>点击create repository。<br>回到git bash中，<br><code>git config --global user.name &quot;yourname&quot; </code><br><code>git config --global user.email &quot;youremail&quot;</code></p><p>这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。<br>输入完成之后可以用以下两条，<br><code>git config user.name</code><br><code>git config user.email</code><br>这两条命令可以让你看一下你之前输入的值，自己检查一下有没有问题<br>然后创建SSH<code>ssh-keygen -t rsa -C &quot;youremail&quot;</code>，一直按回车就行 。<br>这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。<br>ssh，简单来讲，就是一个秘钥，其中，<code>id_rsa</code>是你这台电脑的私人秘钥，不能给别人看的，<code>id_rsa.pub</code>是公共秘钥，可以随便给别人看。<br>把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。<br>而后在GitHub的setting中，找到SSH keys的设置选项，点击New SSH key<br>把你的<code>id_rsa.pub</code>里面的信息复制进去。<br>同样可以在gitbash中，查看是否成功<br><code>ssh -T git@github.com</code>  </p><h3 id="6-将Hexo部署到github"><a href="#6-将Hexo部署到github" class="headerlink" title="6.将Hexo部署到github"></a>6.将Hexo部署到github</h3><p>将hexo生成的文章部署到GitHub上，打开站点配置文件 _config.yml，翻到最后有个<code>deploy</code>，修改，YourgithubName就是你的GitHub账户  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;YourgithubName&#x2F;YourgithubName.github.io.git  </span><br><span class="line">  #发布到github（可以https或SSH方式，这里用的是https的）这个东西可以去github的个人仓库处复制，就是&#96;下载&#96;上面的东西</span><br><span class="line">  branch: master #仓库分支 &#96;&#96;&#96; </span><br><span class="line">  这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。</span><br></pre></td></tr></table></figure><p> <code>npm install hexo-deployer-git --save</code><br>然后  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy </span><br></pre></td></tr></table></figure><p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。（清除缓存，换主题的时候一定要先<code>hexo clean</code>后面会讲到换博客主题）可以用<code>hexo c</code>缩写  </p><p><code>hexo generate</code> 生成静态文章，可以用 <code>hexo g</code>缩写  </p><p><code>hexo deploy</code> 部署文章，可以用<code>hexo d</code>缩写  </p><p>注意deploy时可能要你输入username和password。<br>接着git bash中最后反正看到<code>git</code>这个词应该就没问题了。<br>过一会儿就可以在<a href="http://yourname.github.io/">http://yourname.github.io</a> 这个网站看到你的博客了。</p><h3 id="7-将Hexo部署到coding"><a href="#7-将Hexo部署到coding" class="headerlink" title="7.将Hexo部署到coding"></a>7.将Hexo部署到coding</h3><p>同样在coding中创建仓库，跟github一样，接着个人页面的setting中设定SSH（也可以不搞，直接用https的，但是还是建议设定一下）。接着去搞静态页面，不过在coding中要先实名认证，然后进入再左边代码仓库，只有实名认证之后才会出现静态页面的选项，创建静态页面，它有固定域名，不过后面我们可以自己绑定域名。<br>将hexo生成的文章部署到coding上，打开站点配置文件 _config.yml，翻到最后有个<code>deploy</code>，修改，  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: </span><br><span class="line">  https:&#x2F;&#x2F;coding.net&#x2F;YourgithubName&#x2F;YourgithubName.github.io.git#发布到Coding（可以用https或SSH方式，这里用的是https的）同样这个东西可以去coding的个人仓库处复制，就是&#96;下载&#96;上面的东西。</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>  假如两者都部署<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: </span><br><span class="line">  https:&#x2F;&#x2F;github.com&#x2F;YourgithubName&#x2F;YourgithubName.github.io.git,master（这是前面github部署的） </span><br><span class="line">  https:&#x2F;&#x2F;coding.net&#x2F;YourgithubName&#x2F;YourgithubName.github.io.git,master  #发布到Coding（可以用https或SSH方式，这里用的是https的）同样这个东西可以去coding的个人仓库处复制，就是&#96;下载&#96;上面的东西。</span><br></pre></td></tr></table></figure><br>  <code>master</code>同样是分支<br>  这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到coding。<br> <code>npm install hexo-deployer-git --save</code><br>然后同样  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。（清除缓存，换主题的时候一定要先<code>hexo clean</code>，后面会讲到换博客主题）可以用<code>hexo c</code>缩写<br><code>hexo generate</code> 生成静态文章，可以用 <code>hexo g</code>缩写<br><code>hexo deploy</code> 部署文章，可以用<code>hexo d</code>缩写<br>注意deploy时可能要你输入username和password。<br>接着git bash中最后看到<code>git</code>这个词基本没问题了。<br>过一会儿就可以从coding中静态页面的固定域名中看到你的博客了。</p><h3 id="8-设置个人域名"><a href="#8-设置个人域名" class="headerlink" title="8.设置个人域名"></a>8.设置个人域名</h3><p>现在你的个人网站的地址是 yourname.github.io或者是coding的固定域名，如果觉得这个网址逼格不太够，这就需要你设置个人域名了。<br>有个免费的方式<a href="my.freenom.com">freenom</a>有免费的域名后缀但是你得自己手动续年而且有些隐性问题，我个人感觉有点烦，当然也是可以选择的。不过长期还是自己购买一个，域名相对服务器还是很便宜的。<br>你可以去<a href="https://wanwang.aliyun.com/">万网</a>注册一个域名,各个后缀的价格不太一样，比如最广泛的.com就比较贵，看个人喜好。<br>接着你需要先去进行实名认证,然后在域名控制台中，看到你购买的域名。点解析进去，添加解析。<br>其中，192.30.252.153 和 192.30.252.154 是GitHub的服务器地址。<br>登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名<br>然后在你的博客文件source中创建一个名为CNAME文件，不要后缀。写上你的域名。<br>Coding中的话，同样解析，给你的域名添加一个CANME记录（这是从一个域名到另一个域名）将它设定为默认。把github的设定为海外。<br>这样，默认访问将会被解析到 Coding.net，但是海外访问会被解析到 Github。非常方便。<br>如果你的网站域名已经备案了的话，你还可以使用CDN服务进一步为自己的网站提速。<br>最后，在gitbash中，输入  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo c</span><br><span class="line">hexo g</span><br><span class="line">hexo d   </span><br></pre></td></tr></table></figure><p>过不了多久，再打开你的浏览器，输入你自己的域名，就可以看到搭建的网站啦！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>利用Heroku套cf实现简单的科学上网</title>
      <link href="2021/04/15/%E5%88%A9%E7%94%A8Heroku%E5%A5%97cf%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
      <url>2021/04/15/%E5%88%A9%E7%94%A8Heroku%E5%A5%97cf%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<h3 id="Heroku介绍"><a href="#Heroku介绍" class="headerlink" title="Heroku介绍"></a>Heroku介绍</h3><p><strong>Heroku</strong>是一个支持多种编程语言的<a href="https://baike.baidu.com/item/%E4%BA%91%E5%B9%B3%E5%8F%B0/3963188">云平台</a>。在2010年被Salesforce.com收购。Heroku作为最开始的<a href="https://baike.baidu.com/item/%E4%BA%91%E5%B9%B3%E5%8F%B0">云平台</a>之一，从2007年6月起开发，当时它仅支持<a href="https://baike.baidu.com/item/Ruby">Ruby</a>，但后来增加了对<a href="https://baike.baidu.com/item/Java">Java</a>、<a href="https://baike.baidu.com/item/Node.js">Node.js</a>、<a href="https://baike.baidu.com/item/Scala">Scala</a>、<a href="https://baike.baidu.com/item/Clojure">Clojure</a>、<a href="https://baike.baidu.com/item/Python">Python</a>以及（未记录在正式文件上）<a href="https://baike.baidu.com/item/PHP">PHP</a>和<a href="https://baike.baidu.com/item/Perl">Perl</a>的支持。基础<a href="https://baike.baidu.com/item/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/192">操作系统</a>是<a href="https://baike.baidu.com/item/Debian">Debian</a>，在最新的堆栈则是基于Debian的<a href="https://baike.baidu.com/item/Ubuntu">Ubuntu</a>。—-百度百科：）</p><p><strong>开始之前先说明这玩意虽然免费但是滥用有风险</strong></p><p><strong>理论上只要你邮箱够多，你就够强</strong></p><h3 id="一-配置Heroku"><a href="#一-配置Heroku" class="headerlink" title="一.配置Heroku"></a>一.配置Heroku</h3><h4 id="1-注册账号"><a href="#1-注册账号" class="headerlink" title="1.注册账号"></a>1.注册账号</h4><p>点击<a href="https://dashboard.heroku.com/apps">Heroku</a>注册一个账号<strong>注意别用qq邮箱</strong></p><h4 id="2-建立应用"><a href="#2-建立应用" class="headerlink" title="2.建立应用"></a>2.建立应用</h4><p><a href="https://dashboard.heroku.com/new?template=https://github.com/bclswl0827/v2ray-heroku">点我</a>部署应用，其中的app name可以自己填</p><h4 id="3-获取相关信息"><a href="#3-获取相关信息" class="headerlink" title="3.获取相关信息"></a>3.获取相关信息</h4><p>部署完成之后回到主页选择自己的应用，点击setting</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20201006143942897.png#shadow" alt="image-20201006143942897"></p><p>其中点击Reveal Config Vars</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20201006144025150.png#shadow" alt="image-20201006144025150"></p><p>然后你就可以获取到UUID</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20201006144102160.png#shadow" alt="image-20201006144102160"></p><p>接着下滑页面找到Domains</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20201006144154446.png#shadow" alt="image-20201006144154446"></p><p>这里域名之后配置CloudFlare 反向代理会用到</p><h3 id="二-配置CloudFlare反向代理"><a href="#二-配置CloudFlare反向代理" class="headerlink" title="二.配置CloudFlare反向代理"></a>二.配置CloudFlare反向代理</h3><h4 id="1-登陆CloudFlare官网"><a href="#1-登陆CloudFlare官网" class="headerlink" title="1.登陆CloudFlare官网"></a>1.登陆CloudFlare官网</h4><p>这里反正没有的就注册一下</p><h4 id="2-创建workers"><a href="#2-创建workers" class="headerlink" title="2.创建workers"></a>2.创建workers</h4><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20201006144456768.png#shadow"></p><p>接着create a worker</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20201006144606941.png#shadow" alt="image-20201006144606941"></p><p>接下来把下面的代码粘贴过去</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">addEventListener(</span><br><span class="line">  &quot;fetch&quot;,event &#x3D;&gt; &#123;</span><br><span class="line">     let url&#x3D;new URL(event.request.url);</span><br><span class="line">     url.hostname&#x3D;&quot;你自己之前的heroku域名.herokuapp.com&quot;;</span><br><span class="line">     let request&#x3D;new Request(url,event.request);</span><br><span class="line">     event. respondWith(</span><br><span class="line">       fetch(request)</span><br><span class="line">     )</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20201006144829042.png#shadow" alt="image-20201006144829042"></p><p>接下来可以<code>send</code>一下</p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20201006144935608.png#shadow" alt="image-20201006144935608"></p><p>如上图出现<code>Bad Request</code>即可，接着点击<code>Save and Deploy</code>，<strong>接着出现的信息也在后续需要用到</strong></p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20201006145559521.png#shadow" alt="image-20201006145559521"></p><h3 id="三-配置v2ray客户端"><a href="#三-配置v2ray客户端" class="headerlink" title="三.配置v2ray客户端"></a>三.配置v2ray客户端</h3><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/image-20201006150220472.png#shadow" alt="image-20201006150220472"></p><p><strong>注意</strong>：关于自选ip，<a href="https://www.cloudflare.com/zh-cn/ips/">官方地址</a>，其他一些优质自行百度。</p><p><a href="https://www.ce8.com/ping/">ip测试</a>输入ip地址查询即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">CloudFlare的节点：国内速较快的IP段：</span><br><span class="line"></span><br><span class="line">（联通移动推荐节点）</span><br><span class="line"></span><br><span class="line">104.23.240.0-104.23.243.254</span><br><span class="line"></span><br><span class="line">（电信推荐CloudFlare 百度云合作 ip）</span><br><span class="line"></span><br><span class="line">162.159.208.4-162.159.208.103</span><br><span class="line"></span><br><span class="line">162.159.209.4-162.159.209.103</span><br><span class="line"></span><br><span class="line">162.159.210.4-162.159.210.103</span><br><span class="line"></span><br><span class="line">162.159.211.4-162.159.211.103</span><br><span class="line"></span><br><span class="line">各线路推荐列表：</span><br><span class="line">电信：推荐走圣何塞，例：104.16.160.* 或者上面的百度云合作 ip。</span><br><span class="line">移动：推荐走移动香港，例：172.64.32.*、141.101.115.* 或者 104.23.240.0-104.23.243.254。</span><br><span class="line">联通：没发布什么好线路，可走圣何塞。例：104.16.160.* 或者 104.23.240.0-104.23.243.254。也可以试一下走亚特兰大 108.162.236.*（日前不可用。） 。</span><br><span class="line"></span><br><span class="line">延迟和速度不错，IP地址：162.159.211.3-162.159.211.103</span><br><span class="line"></span><br><span class="line">移动很不错：198.41.214.162</span><br></pre></td></tr></table></figure><h4 id="4-总结"><a href="#4-总结" class="headerlink" title="4.总结"></a>4.总结</h4><p>Heroku YES</p><p>有小伙伴用IBM也可以，感觉相对麻烦点 ，这里附上github作者地址<a href="https://github.com/CCChieh/IBMYes">IBMYes</a>。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>VMware Workstation Pro15 安装CentOS踩坑02</title>
      <link href="2021/04/15/VMware%20Workstation%20Pro15%20%E5%AE%89%E8%A3%85CentOS%E8%B8%A9%E5%9D%91/"/>
      <url>2021/04/15/VMware%20Workstation%20Pro15%20%E5%AE%89%E8%A3%85CentOS%E8%B8%A9%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<h4 id="1-安装虚拟机出现蓝屏"><a href="#1-安装虚拟机出现蓝屏" class="headerlink" title="1.安装虚拟机出现蓝屏"></a>1.安装虚拟机出现蓝屏</h4><p>安装时把硬件中的打印机等移除即可</p><h4 id="2-安装centos7的时候-启动会提示Please-make-your-choice-from-above问题解决"><a href="#2-安装centos7的时候-启动会提示Please-make-your-choice-from-above问题解决" class="headerlink" title="2.安装centos7的时候 启动会提示Please make your choice from above问题解决"></a>2.安装centos7的时候 启动会提示Please make your choice from above问题解决</h4><p>依次输入 1 、2、q、yes 就可以了</p><h4 id="3-安装图形界面"><a href="#3-安装图形界面" class="headerlink" title="3.安装图形界面"></a>3.安装图形界面</h4><ol><li>开启系统，以root身份进入<br><img src="https://img-blog.csdnimg.cn/20181103201459407.png" alt="在这里插入图片描述"></li><li>安装X(X Window System)，命令如下：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall &quot;X Window System&quot;</span><br></pre></td></tr></table></figure><ol start="3"><li>其中大约有200多个软件，安装完成会出现complete！字样。然后安装图形界面软件，GNOME(GNOME Desktop)，命令如下：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall &quot;GNOME Desktop&quot;</span><br></pre></td></tr></table></figure><ol start="4"><li><p>由于这个软件组比第一个要大很多（包含800个左右的软件），安装过程会比较慢。安装完成会出现complete！字样。</p></li><li><p>安装完成后我们可以通过命令 startx 进入图形界面</p></li></ol><h4 id="4-开机启动图形化界面"><a href="#4-开机启动图形化界面" class="headerlink" title="4.开机启动图形化界面"></a>4.开机启动图形化界面</h4><ol><li>首先使用ctrl+alt+f2切换到命令行模式，如果本身就是命令行模式就直接看下面的步骤</li><li>然后输入如下命令，查看当前开机启动模式</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl get-default</span><br></pre></td></tr></table></figure><p>graphical.target代表开机时启动图形化界面<br>multi-user.target代表开机时启动dos界面</p><ol start="9"><li>最后输入如下命令设置开机启动图形界面</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl set-default graphical.target </span><br></pre></td></tr></table></figure><ol start="10"><li>同理，如果想开机启动dos界面，就输入如下命令</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl set-default multi-user.target </span><br></pre></td></tr></table></figure><h4 id="5-dos界面与图形化界面切换快捷键"><a href="#5-dos界面与图形化界面切换快捷键" class="headerlink" title="5.dos界面与图形化界面切换快捷键"></a>5.dos界面与图形化界面切换快捷键</h4><ol><li>图形到dos：ctrl+alt+f2</li><li>dos到图形：输入startx</li><li>在命令上输入 init 3 命令 切换到dos界面</li><li>输入 init 5命令 切换到图形界面</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>typora+picgo+gitee个人图床写作踩坑</title>
      <link href="2021/04/15/typora+picgo+gitee%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%E5%86%99%E4%BD%9C%E8%B8%A9%E5%9D%91/"/>
      <url>2021/04/15/typora+picgo+gitee%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%E5%86%99%E4%BD%9C%E8%B8%A9%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<h4 id="picgo中自带的插件市场无法使用，利用npm命令安装"><a href="#picgo中自带的插件市场无法使用，利用npm命令安装" class="headerlink" title="picgo中自带的插件市场无法使用，利用npm命令安装"></a>picgo中自带的插件市场无法使用，利用npm命令安装</h4><ol><li>检查npm安装情况，<code>npm -v</code></li><li>使用管理员身份打开命令提示符</li><li>进入picgo的目录，<code>cd C:\Users\用户名\AppData\Roaming\picgo</code>，进入picgo目录，输入<code>npm install picgo-plugin-插件名称</code>安装插件</li><li>出现<code>npm ERR! code ETIMEDOUT npm ERR! errno ETIMEDOUT npm ERR! network</code>和<code>rollbackFailedOptional verb npm-session</code>报错，清除代理之后使用命令行设置代理模式的方法不知道为什么个人使用失败，不过可以直接进入nodejs的文件夹目录。进入nodejs，然后进入node_modules，接着进入npm文件夹，文件夹内有个名为npmrc的文件，编辑文件，将其中内容替换成<code>prefix=$&#123;APPDATA&#125;\npm registry = https://registry.npm.taobao.org</code>其实就是改了镜像</li><li>重复2和3中的步骤完成picgo的插件安装</li></ol><h4 id="建立gitee图床"><a href="#建立gitee图床" class="headerlink" title="建立gitee图床"></a>建立gitee图床</h4><ol><li><p>gitee创建仓库点击新建仓库，并且选择<strong>公开</strong>和<strong>使用readme初始化仓库</strong>，并且选择单分支(master)，点击创建。</p></li><li><p>接下来点击头像，设置，选择“私人令牌”，点击生成新令牌，如图选择权限<img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/20210128141918.png" alt="image-20210128141918590"></p><p><strong>！！！私人令牌一定要保存好！！！</strong></p></li></ol><h4 id="配置picgo"><a href="#配置picgo" class="headerlink" title="配置picgo"></a>配置picgo</h4><p><code>repo:仓库名称 (前面是gitee用户名，后面是仓库名称) branch:分支 token:刚刚复制好的私人令牌 path:仓库里存储图片的路径</code></p><p><img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/20210128142227.png" alt="image-20210128142227220"></p><h4 id="配置typora"><a href="#配置typora" class="headerlink" title="配置typora"></a>配置typora</h4><ol><li>自动上传<img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/20210128142318.png" alt="image-20210128142318572"></li><li>手动上传<img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/20210128142534.png" alt="image-20210128142513851"></li></ol><h4 id="picgo-typora上传图片错误总结"><a href="#picgo-typora上传图片错误总结" class="headerlink" title="picgo+typora上传图片错误总结"></a>picgo+typora上传图片错误总结</h4><ol><li><p><strong>Failed to fetch</strong>一般因为端口设置问题，打开picgo日志文件可以看到端口繁忙</p><p><strong>解决方法</strong>：打开picgo设置，打开server选项，将端口改成36677</p><p>不过有的时候，如你打开了多个picgo程序，就会端口冲突，<strong>picgo自动帮你把36677端口改为366771端口</strong>，导致错误。log文件里也写得很清楚。</p><p><strong>解决方法</strong>：先把picgo中的端口设置改回36677，然后退出所有picgo程序，再使用typora上传功能（会自动启动picgo程序）</p></li><li><p>**{“success”,false}**原因是文件名冲突了，同样打开picgo日志文件也可以看到。</p><p><strong>解决方法</strong>：打开picgo设置，将【时间戳重命名】打开。<img src="https://gitee.com/sleepeveryday/imagebd/raw/master/img/20210128143423.png" alt="image-20210128143419710"></p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基本语法</title>
      <link href="2021/04/15/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
      <url>2021/04/15/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="导语"><a href="#导语" class="headerlink" title="导语"></a>导语</h3><blockquote><p><a href="https://link.jianshu.com/?t=http://zh.wikipedia.org/wiki/Markdown">Markdown</a> 是一种轻量级的<strong>「标记语言」</strong>，它的优点很多。学习成本相对较低，十分轻量，熟悉时候，可以极大地提升工作效率和书写。</p></blockquote><h3 id="1-认识Markdown"><a href="#1-认识Markdown" class="headerlink" title="1.认识Markdown"></a>1.认识Markdown</h3><p>在刚才的导语提到，Markdown是一种写作的轻量级**[标记语言]**，它可以用简单的语法来代替排版。许多的网站，编辑器都对Markdown进行支持，格式随心所欲，简单来说你可以在知乎看到大量的例子。</p><blockquote><p>比如这样的例子 </p></blockquote><p>或者<code>hello world</code>  </p><p>可以发现格式的不同，阅读起来相比于普通的文字更舒服，同样编辑也很方便。</p><h4 id="Markdown-官方文档"><a href="#Markdown-官方文档" class="headerlink" title="Markdown 官方文档"></a>Markdown 官方文档</h4><blockquote><p>这里可以看到官方的 Markdown 语法规则文档，当然，<strong>后文我也会用自己的方式阐述这些语法的具体用法</strong>。</p></blockquote><ul><li><a href="https://link.jianshu.com/?t=http://daringfireball.net/projects/markdown/syntax"><em>创始人 John Gruber 的 Markdown 语法说明</em></a></li></ul><h4 id="Markdown工具介绍"><a href="#Markdown工具介绍" class="headerlink" title="Markdown工具介绍"></a>Markdown工具介绍</h4><p>前面说过有大量的编辑器支持Markdown格式，例如有道云笔记等都支持.md格式也就是Markdown格式。由于懒癌晚期，关于Mac方面，我去找了一些资料，自己并未使用。</p><ul><li>Mac<ol><li>Mou，一款免费且十分好用的 Markdown 编辑器，它支持<strong>实时预览</strong>，既左边是你编辑 Markdown 语言，右边会实时的生成预览效果。不仅如此，Mou 还有一些有趣的偏好设置（<em>Preference</em>），例如主题（<em>Themes</em>）与样式（<em>CSS</em>），它们可以配置出定制化的文本编辑效果与导出效果，如果你对自带的主题与样式不满意还可以到 <a href="https://link.jianshu.com/?t=https://github.com/search?utf8=%E2%9C%93&q=Mou">GitHub</a> 上搜索其它爱好者为 Mou 编写的更多主题样式，导入的方式可以在偏好设置的 Themes 或 CSS 选项中 选择 reload。</li></ol></li></ul><ul><li><p>Windows</p><ol><li>强烈推荐typora，干净清洁，是我暂时使用过的最舒服的typecho，并且可以和图床联动，在书写时的图片可以不放在相对路径，这对于博文中的图片保存是非常有利的。</li><li>有道云笔记，我最开始用的这个，说实话相比typecho，使用起来就比较难受了，不过有云端保存，记笔记也还可以。支持左右两栏实时预览。</li></ol></li><li><p>Web</p><ol><li><a href="https://www.zybuluo.com/mdeditor">Cmd Markdown 编辑阅读器</a> 一款十分干净的编辑器，很舒服，支持左右实时预览。</li><li><a href="https://www.jianshu.com/">简书</a> 同样支持左右两栏实时预览。</li></ol></li></ul><h3 id="2-Markdown语法的简要规则"><a href="#2-Markdown语法的简要规则" class="headerlink" title="2.Markdown语法的简要规则"></a>2.Markdown语法的简要规则</h3><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p>如果一段文字被定义为标题，井号#加上空格，然后加上标题的内容</p><p>如</p><p><code># 一级标题</code></p><p><code>## 二级标题</code></p><p>几级标题就加几个#，共六级标题。</p><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><p>文字前加上<code>-</code>或<code>*</code>即可变成无序列表，有序列表则是直接在文字前加数字<code>1.</code> <code>2.</code> <code>3.</code> 跟标题一样，都是符号加空格加文字</p><p>如</p><p><code>1.</code>  </p><ol><li>有序1</li></ol><p><code>*</code></p><ul><li>无序1</li></ul><p><code>-</code></p><ul><li>无序2</li></ul><h4 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h4><p>假如你要引用一段句子，那么就可以用引用格式<code>&gt;</code>，其中引用可以实现嵌套</p><p>如</p><p><code>&gt;我是引用</code></p><blockquote><p>我是引用</p></blockquote><p><code>&gt;&gt;我是嵌套引用</code></p><blockquote><blockquote><p>我是嵌套引用</p></blockquote></blockquote><h4 id="图片与链接"><a href="#图片与链接" class="headerlink" title="图片与链接"></a>图片与链接</h4><p>两者语法较为相似</p><p><strong>注</strong>：Markdown本身语法不支持链接在新页面中打开，如果想要在新页面中打开的话可以用html语言的a标签代替。</p><p>图片：<code>![文字](链接)</code></p><p>链接：<code>[文字](链接)</code></p><p>如</p><p><code>[百度](www.baidu.com)</code></p><p><a href="https://www.baidu.com/">百度</a></p><p><code>![图片](https://pic.downk.cc/item/5e8750aa504f4bcb0402e496.jpg#shadow)</code><br><img src="https://pic.downk.cc/item/5e8753c5504f4bcb04056a09"></p><h4 id="粗体与斜体"><a href="#粗体与斜体" class="headerlink" title="粗体与斜体"></a>粗体与斜体</h4><p>使用两个<code>*</code>包裹一段文本就是粗体的语法，用一个<code>*</code>包裹一段文本就是斜体</p><p>如</p><p><code>**我是粗体**</code></p><p><strong>我是粗体</strong></p><p><code>*我是斜体*</code></p><p><em>我是斜体</em></p><h4 id="斜体加粗和删除线"><a href="#斜体加粗和删除线" class="headerlink" title="斜体加粗和删除线"></a>斜体加粗和删除线</h4><p>要倾斜和加粗的文字左右分别用三个*号包起来</p><p>如</p><p><strong><em>我是斜体加粗</em></strong></p><p>要加删除线的文字左右分别用两个~~号包起来</p><p>如</p><p><del>我是有删除线的</del></p><h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><p>表格还挺离谱的，但是其实一般情况都不太会用</p><p>如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :-----| ----: | :----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><ul><li><code>-:</code>设置内容和标题栏居右对齐</li><li><code>:-</code>设置内容和标题栏局左对齐</li><li><code>:-:</code>设置内容和标题栏居中对齐</li></ul><h4 id="代码框"><a href="#代码框" class="headerlink" title="代码框"></a>代码框</h4><ol><li><p>使用``` `将代码包裹</p><p>如</p><p><code>hello world</code></p><p>使用<code>tab</code>即可缩进</p></li><li><p>使用三个`包裹代码块</p><p>如</p><p><code>我是代码块</code></p></li></ol><h4 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h4><p>使用三个或三个以上的<code>*</code>或者<code>-</code>即可实现</p><p>如</p><p><code>***</code></p><hr><p>分割线</p><p><code>----</code></p><hr><p>分割线</p><h4 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h4><p>很好用的东西，但是同样不常用：）</p><p>如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">flow</span><br><span class="line">st&#x3D;&gt;start: 开始</span><br><span class="line">op&#x3D;&gt;operation: My Operation</span><br><span class="line">cond&#x3D;&gt;condition: Yes or No?</span><br><span class="line">e&#x3D;&gt;end</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br><span class="line">&amp;</span><br></pre></td></tr></table></figure><h3 id="3-结语"><a href="#3-结语" class="headerlink" title="3.结语"></a>3.结语</h3><p>本文写到这里，这些语法一般情况暂时够用了，如果不够用的话可以去翻阅官方文档。（可能随缘更新）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>css新拟态</title>
      <link href="2021/04/15/css%E6%96%B0%E6%8B%9F%E6%80%81/"/>
      <url>2021/04/15/css%E6%96%B0%E6%8B%9F%E6%80%81/</url>
      
        <content type="html"><![CDATA[<p>新拟态.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">html</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;text.css&quot;&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 整个大的盒子 --&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">        &lt;!-- 每个图标的小盒子 --&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;box&quot;&gt;</span><br><span class="line">            &lt;!-- 放图片的小盒子 --&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;img&quot;&gt;</span><br><span class="line">                &lt;!-- 图标，可以到阿里巴巴矢量图标库下载 --&gt;</span><br><span class="line">                &lt;img src&#x3D;&quot;播放.png&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;p&gt;播放&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;box&quot;&gt;</span><br><span class="line">            &lt;!-- 放图片的小盒子 --&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;img&quot;&gt;</span><br><span class="line">                &lt;!-- 图标，可以到阿里巴巴矢量图标库下载 --&gt;</span><br><span class="line">                &lt;img src&#x3D;&quot;时钟.png&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;p&gt;时钟&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>新拟态.css</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">css</span><br><span class="line">* &#123;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 100vh;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: center;</span><br><span class="line">    align-items: center;</span><br><span class="line">    background-color: #efeeee;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.container &#123;</span><br><span class="line">    width: 700px;</span><br><span class="line">    height: 600px;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-around;</span><br><span class="line">    flex-wrap: wrap;</span><br><span class="line">    align-items: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.container .box &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-around;</span><br><span class="line">    flex-direction: column;</span><br><span class="line">    align-items: center;</span><br><span class="line">    align-content: center;</span><br><span class="line">    width: 100px;</span><br><span class="line">    height: 140px;</span><br><span class="line">    margin: 20px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.container .box .img &#123;</span><br><span class="line">    width: 100px;</span><br><span class="line">    height: 100px;</span><br><span class="line">    box-shadow: 18px 18px 30px rgba(0, 0, 0, 0.1), -18px -18px 30px rgba(255, 255, 255, 1);</span><br><span class="line">    border-radius: 20px;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line">    justify-content: center;</span><br><span class="line">    background-color: #efeeee;</span><br><span class="line">    transition: box-shadow .2s ease-out;</span><br><span class="line">    position: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.container .box .img img &#123;</span><br><span class="line">    width: 60px;</span><br><span class="line">    transition: width .2s ease-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.container .box p &#123;</span><br><span class="line">    color: slategray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.container .box .img:hover &#123;</span><br><span class="line">    box-shadow: 0px 0px 0px rgba(0, 0, 0, 0.1), 0px 0px 0px rgba(255, 255, 255, 0.8), inset 18px 18px 30px rgba(0, 0, 0, 0.1), inset -18px -18px 30px rgba(255, 255, 255, 1);</span><br><span class="line">    transition: box-shadow .2s ease-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.container .box .img:hover img &#123;</span><br><span class="line">    width: 58px;</span><br><span class="line">    transition: width .2s ease-out;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>演示gif</p><p><img src="https://pic.downk.cc/item/5e9eaba5c2a9a83be569a236.gif#shadow" alt="新拟态图标"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>bat高级</title>
      <link href="2021/04/15/Bat%E9%AB%98%E7%BA%A7/"/>
      <url>2021/04/15/Bat%E9%AB%98%E7%BA%A7/</url>
      
        <content type="html"><![CDATA[<p>BAT脚本编写教程入门提高篇<br>批处理文件的参数</p><p>批处理文件还可以像C语言的函数一样使用参数（相当于DOS命令的命令行参数），这需要用到一个参数表示符“%”。</p><p>%[1-9]表示参数，参数是指在运行批处理文件时在文件名后加的以空格（或者Tab）分隔的字符串。变量可以从%0到%9，%0表示批处理命令本身，其它参数字符串用%1到%9顺序表示。</p><p>例子：</p><p>ShowTwoFilesContent.bat</p><p><span style="font-size:18px;">@ECHO OFF<br>TITLE BAT参数<br>COLOR A<br>echo ———–读取文件内容———–<br>echo=<br>TYPE %1<br>echo=<br>TYPE %2<br>echo=<br>echo ———————————–<br>PAUSE</span><br>在另一个BAT文件中调用</p><p><span style="font-size:18px;">@ECHO OFF<br>TITLE BAT参数<br>COLOR A<br>echo ———–BAT参数———–<br>echo=<br>CALL ShowTwoFilesContent.bat 1.txt 2.txt<br>echo=<br>echo ———————————–<br>PAUSE<br></span></p><p>if goto choice for 命令<br>1、if [not] “参数” == “字符串” 待执行的命令</p><p>参数如果等于(not表示不等，下同)指定的字符串，则条件成立，运行命令，否则运行下一句。</p><p>例：if “%1”==”a” format a:</p><p>2、if [not] exist [路径]文件名 待执行的命令<br>如果有指定的文件，则条件成立，运行命令，否则运行下一句。</p><p>如: if exist c:\config.sys type c:\config.sys<br>表示如果存在c:\config.sys文件，则显示它的内容。</p><p>3、if errorlevel &lt;数字&gt; 待执行的命令</p><p>很多DOS程序在运行结束后会返回一个数字值用来表示程序运行的结果(或者状态)，通过if errorlevel命令可以判断程序的返回值，根据不同的返回值来决定执行不同的命令(返回值必须按照从大到小的顺序排列)。如果返回值等于指定的数字，则条件成立，运行命令，否则运行下一句。</p><p>如if errorlevel 2 goto x2</p><p>例子：<br>test.bat<br><span style="font-size:18px;">@ECHO OFF<br>TITLE BAT参数<br>COLOR A<br>echo ———–if goto choice for 命令———–<br>echo=<br>if “%1”==”1” goto x1</p><p>:x1<br>echo 参数1正确…<br>echo=<br>echo ———————————–<br>exit /b 0</span><br>在另一个bat文件中调用<br><span style="font-size:18px;">@ECHO OFF<br>TITLE BAT参数<br>COLOR A<br>echo ———–BAT参数———–<br>echo=<br>CALL test.bat 1<br>if %errorlevel%==0 goto x2</p><p>:x2<br>echo 程序跳到x2…</p><p>echo=<br>echo ———————————–<br>PAUSE<br></span><br>choice 使用此命令可以让用户输入一个字符（用于选择），从而根据用户的选择返回不同的errorlevel，然后于if errorlevel配合，根据用户的选择运行不同的命令。</p><p>注意：choice命令为DOS或者Windows系统提供的外部命令，不同版本的choice命令语法会稍有不同，请用choice /?查看用法。</p><p>choice的命令语法（该语法为Windows 2003中choice命令的语法，其它版本的choice的命令语法与此大同小异）：</p><p>CHOICE [/C choices] [/N] [/CS] [/T timeout /D choice] [/M text]</p><p>   注意:<br>   ERRORLEVEL 环境变量被设置为从选择集选择的键索引。列出的第一个选<br>   择返回 1，第二个选择返回 2，等等。如果用户按的键不是有效的选择，<br>   该工具会发出警告响声。如果该工具检测到错误状态，它会返回 255 的<br>   ERRORLEVEL 值。如果用户按 Ctrl+Break 或 Ctrl+C 键，该工具会返回 0<br>   的 ERRORLEVEL 值。在一个批程序中使用 ERRORLEVEL 参数时，将参数降<br>   序排列。</p><p>示例:<br>   CHOICE /?<br>   CHOICE /C YNC /M “确认请按 Y，否请按 N，或者取消请按 C。”<br>   CHOICE /T 10 /C ync /CS /D y<br>   CHOICE /C ab /M “选项 1 请选择 a，选项 2 请选择 b。”<br>   CHOICE /C ab /N /M “选项 1 请选择 a，选项 2 请选择 b。”</p><p>如果我运行命令：CHOICE /C YNC /M “确认请按 Y，否请按 N，或者取消请按 C。”<br>屏幕上会显示：<br>确认请按 Y，否请按 N，或者取消请按 C。 [Y,N,C]?</p><p>例子：<br><span style="font-size:18px;">@ECHO OFF<br>TITLE <span style="font-family:Arial, Helvetica, sans-serif;">CHOICE</span><br>COLOR A<br>echo ———–CHOICE———–<br>echo=<br>CHOICE /C ab /M “选项 1 请选择 a，选项 2 请选择 b。”<br>if %errorlevel%==2 goto B<br>if %errorlevel%==1 goto A</p><p>:A<br>echo 程序跳到A…<br>goto end<br>:B<br>echo 程序跳到B…<br>goto end</p><p>:end<br>echo=<br>echo ———————————–<br>PAUSE</span></p><p>批处理示例</p><ol><li>IF-EXIST</li></ol><p>1)</p><p>首先用记事本在C:\建立一个test1.bat批处理文件，文件内容如下：<br>@echo off<br>IF EXIST \AUTOEXEC.BAT TYPE \AUTOEXEC.BAT<br>IF NOT EXIST \AUTOEXEC.BAT ECHO \AUTOEXEC.BAT does not exist</p><p>然后运行它：<br>C:&gt;TEST1.BAT</p><p>如果C:\存在AUTOEXEC.BAT文件，那么它的内容就会被显示出来，如果不存在，批处理就会提示你该文件不存在。</p><p>2)</p><p>接着再建立一个test2.bat文件，内容如下：<br>@ECHO OFF<br>IF EXIST %1 TYPE %1<br>IF NOT EXIST %1 ECHO %1 does not exist</p><p>执行:<br>C:&gt;TEST2 AUTOEXEC.BAT<br>该命令运行结果同上。</p><p>说明：<br>(1) IF EXIST 是用来测试文件是否存在的，格式为<br>IF EXIST [路径+文件名] 命令<br>(2) test2.bat文件中的%1是参数，DOS允许传递9个批参数信息给批处理文件，分别为%1~%9(%0表示test2命令本身) ，这有点象编程中的实参和形参的关系，%1是形参，AUTOEXEC.BAT是实参。</p><ol start="3"><li>更进一步的，建立一个名为TEST3.BAT的文件，内容如下：<br>@echo off<br>IF “%1” == “A” ECHO XIAO<br>IF “%2” == “B” ECHO TIAN<br>IF “%3” == “C” ECHO XIN</li></ol><p>如果运行：<br>C:&gt;TEST3 A B C<br>屏幕上会显示:<br>XIAO<br>TIAN<br>XIN</p><p>如果运行：<br>C:&gt;TEST3 A B<br>屏幕上会显示<br>XIAO<br>TIAN</p><p>在这个命令执行过程中，DOS会将一个空字符串指定给参数%3。</p><p>2、IF-ERRORLEVEL</p><p>建立TEST4.BAT，内容如下：<br>@ECHO OFF<br>XCOPY C:\AUTOEXEC.BAT D:IF ERRORLEVEL 1 ECHO 文件拷贝失败<br>IF ERRORLEVEL 0 ECHO 成功拷贝文件</p><p>然后执行文件:<br>C:&gt;TEST4</p><p>如果文件拷贝成功，屏幕就会显示“成功拷贝文件”，否则就会显示“文件拷贝失败”。</p><p>IF ERRORLEVEL 是用来测试它的上一个DOS命令的返回值的，注意只是上一个命令的返回值，而且返回值必须依照从大到小次序顺序判断。<br>因此下面的批处理文件是错误的：<br>@ECHO OFF<br>XCOPY C:\AUTOEXEC.BAT D:<br>IF ERRORLEVEL 0 ECHO 成功拷贝文件<br>IF ERRORLEVEL 1 ECHO 未找到拷贝文件<br>IF ERRORLEVEL 2 ECHO 用户通过ctrl-c中止拷贝操作<br>IF ERRORLEVEL 3 ECHO 预置错误阻止文件拷贝操作<br>IF ERRORLEVEL 4 ECHO 拷贝过程中写盘错误</p><p>无论拷贝是否成功，后面的：</p><p>未找到拷贝文件<br>用户通过ctrl-c中止拷贝操作<br>预置错误阻止文件拷贝操作<br>拷贝过程中写盘错误</p><p>都将显示出来。</p><p>以下就是几个常用命令的返回值及其代表的意义：<br>backup<br>0 备份成功<br>1 未找到备份文件<br>2 文件共享冲突阻止备份完成<br>3 用户用ctrl-c中止备份<br>4 由于致命的错误使备份操作中止</p><p>diskcomp<br>0 盘比较相同<br>1 盘比较不同<br>2 用户通过ctrl-c中止比较操作<br>3 由于致命的错误使比较操作中止<br>4 预置错误中止比较</p><p>diskcopy<br>0 盘拷贝操作成功<br>1 非致命盘读/写错<br>2 用户通过ctrl-c结束拷贝操作<br>3 因致命的处理错误使盘拷贝中止<br>4 预置错误阻止拷贝操作</p><p>format<br>0 格式化成功<br>3 用户通过ctrl-c中止格式化处理<br>4 因致命的处理错误使格式化中止<br>5 在提示“proceed with format（y/n）?”下用户键入n结束</p><p>xcopy<br>0 成功拷贝文件<br>1 未找到拷贝文件<br>2 用户通过ctrl-c中止拷贝操作<br>4 预置错误阻止文件拷贝操作<br>5 拷贝过程中写盘错误</p><p>3、IF STRING1 == STRING2</p><p>建立TEST5.BAT，文件内容如下：<br>@echo off<br>IF “%1” == “A” formAT A:</p><p>执行：<br>C:&gt;TEST5 A<br>屏幕上就出现是否将A:盘格式化的内容。</p><p>注意：为了防止参数为空的情况，一般会将字符串用双引号（或者其它符号，注意不能使用保留符号）括起来。<br>如：if [%1]==[A] 或者 if %1*==A*</p><p>5、GOTO</p><p>建立TEST6.BAT，文件内容如下：<br>@ECHO OFF<br>IF EXIST C:\AUTOEXEC.BAT GOTO _COPY<br>GOTO _DONE<br>:_COPY<br>COPY C:\AUTOEXEC.BAT D:<br>:_DONE</p><p>注意：<br>(1) 标号前是ASCII字符的冒号”:”，冒号与标号之间不能有空格。<br>(2) 标号的命名规则与文件名的命名规则相同。<br>(3) DOS支持最长八位字符的标号，当无法区别两个标号时，将跳转至最近的一个标号。</p><p>6、FOR</p><p>建立C:\TEST7.BAT，文件内容如下：<br>@ECHO OFF<br>FOR %C IN (*.BAT *.TXT *.SYS) DO TYPE %C</p><p>运行：<br>C:&gt;TEST7</p><p>执行以后，屏幕上会将C:盘根目录下所有以BAT、TXT、SYS为扩展名的文件内容显示出来（不包括隐藏文件）。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>bat初级</title>
      <link href="2021/04/15/Bat%E5%88%9D%E7%BA%A7/"/>
      <url>2021/04/15/Bat%E5%88%9D%E7%BA%A7/</url>
      
        <content type="html"><![CDATA[<p>批处理文件最常用的几个命令：</p><p><code>echo</code>表示显示此命令后的字符<br><code>echo on</code>  表示在此语句后所有运行的命令都显示命令行本身<br><code>echo off</code> 表示在此语句后所有运行的命令都不显示命令行本身<br><code>@</code>与<code>echo off相像，但它是加在每个命令行的最前面，表示运行时不显示这一行的命令行（只能影响当前行）。 </code>call<code>调用另一个批处理文件（如果不用call而直接调用别的批处理文件，那么执行完那个批处理文件后将无法返回当前文件并执行当前文件的后续命令）。</code>pause<code> 运行此句会暂停批处理的执行并在屏幕上显示</code>Press any key to continue…<code>的提示，等待用户按任意键后继续 rem 表示此命令后的字符为注释，不执行。 </code>title BAT<code>的标题 </code>cls` 清除屏幕</p><p>开始例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">@ECHO OFF</span><br><span class="line">TITLE BAT脚本例子1</span><br><span class="line">echo -----------枚举C盘目录下所有文件-----------</span><br><span class="line">echo&#x3D;</span><br><span class="line">echo&#x3D;</span><br><span class="line">dir c:\*.*</span><br><span class="line">rem 输出到文本文件</span><br><span class="line">dir c:\*.* &gt; example1.txt</span><br><span class="line">echo&#x3D;</span><br><span class="line">echo&#x3D;</span><br><span class="line">echo --------------------------------------------</span><br><span class="line">PAUSE</span><br></pre></td></tr></table></figure><p>echo= 表示输出空白行，关于空白行的输出还有其他方式，具体可参考网址：</p><p><a href="http://blog.sina.com.cn/s/blog_4b466ad00101dfqu.html">http://blog.sina.com.cn/s/blog_4b466ad00101dfqu.html</a></p><p>若输入PAUSE&gt;NUL 则表示暂停且不提示“按下任意键继续”。</p><p>设置字体颜色和窗体大小：</p><p>设置字体颜色：COLOR 02 （0代表背景色，2代表前景色）</p><p>常用的颜色有以下值：0 黑色，1蓝色，2 绿色，3 浅绿色，4红色，5紫色，6黄色，7白色，8灰色，9浅蓝，A浅绿，B浅蓝色，C浅红色，D浅紫色，E浅黄色，F亮白色）。</p><p>设置窗体大小：MODE CON: COLS=宽度 LINES=高度</p><p>文件夹简单操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">@ECHO OFF</span><br><span class="line">TITLE BAT脚本例子2</span><br><span class="line">COLOR A</span><br><span class="line">echo -----------BAT脚本例子2-----------</span><br><span class="line">echo&#x3D;</span><br><span class="line">echo&#x3D;</span><br><span class="line">echo  当前工作路径为：%cd%</span><br><span class="line">rem 输出文件目录的树形目录</span><br><span class="line">TREE &#x2F;f &gt;tree_list.txt</span><br><span class="line">rem CD切换不同盘符时候需要加上&#x2F;d</span><br><span class="line">CD &#x2F;D C:\</span><br><span class="line">echo  当前工作路径为：%cd%</span><br><span class="line">DIR</span><br><span class="line">rem 创建目录bat_example2</span><br><span class="line">MD bat_example2</span><br><span class="line">DIR</span><br><span class="line">rem 拷贝目录 &#x2F;s &#x2F;e &#x2F;y 说明：在复制文件的同时也复制空目录或子目录，如果目标路径已经有相同文件了，使用覆盖方式而不进行提示</span><br><span class="line">Xcopy C:\bat_example2 D:\bat_example2  &#x2F;s &#x2F;e &#x2F;y</span><br><span class="line"></span><br><span class="line">rem 删除目录bat_example2</span><br><span class="line">rem RD &#x2F;Q &#x2F;S bat_example2</span><br><span class="line">rem DIR</span><br><span class="line">echo&#x3D;</span><br><span class="line">echo&#x3D;</span><br><span class="line">echo --------------------------------------------</span><br><span class="line">PAUSE</span><br></pre></td></tr></table></figure><p>关于文件夹的其他操作，可参考网址：<a href="http://www.jb51.net/article/11313.htm">http://www.jb51.net/article/11313.htm</a></p><p>文件操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">@ECHO OFF</span><br><span class="line">TITLE BAT脚本例子3</span><br><span class="line">COLOR A</span><br><span class="line">echo -----------BAT脚本例子3-----------</span><br><span class="line">echo&#x3D;</span><br><span class="line">echo&#x3D;</span><br><span class="line">TYPE tree_list1.txt</span><br><span class="line">rem 复制（合并）文件 &#x2F;Y 表示目标路径存在该文件则不提示直接覆盖</span><br><span class="line">COPY &#x2F;Y tree_list2.txt + tree_list3.txt C:\</span><br><span class="line"></span><br><span class="line">DEL tree_list4.txt &#x2F;f &#x2F;s &#x2F;q &#x2F;a </span><br><span class="line">rem &#x2F;f 表示强制删除文件 </span><br><span class="line">rem &#x2F;s表示子目录都要删除该文件 </span><br><span class="line">rem &#x2F;q表示无声，不提示 </span><br><span class="line">rem &#x2F;a根据属性选择要删除的文件 </span><br><span class="line"></span><br><span class="line">rem 需要特别注意的是：move不能跨分区移动文件夹</span><br><span class="line">MOVE example3 example3_1</span><br><span class="line">echo&#x3D;</span><br><span class="line">echo&#x3D;</span><br><span class="line">echo --------------------------------------------</span><br><span class="line">PAUSE</span><br></pre></td></tr></table></figure><p>网络命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@ECHO OFF</span><br><span class="line">TITLE BAT脚本例子4</span><br><span class="line">COLOR A</span><br><span class="line">echo -----------BAT脚本例子4-----------</span><br><span class="line">echo&#x3D; </span><br><span class="line">PING www.baidu.com</span><br><span class="line">echo&#x3D;</span><br><span class="line">echo -----------------------------------</span><br><span class="line">IPCONFIG</span><br><span class="line">echo&#x3D;</span><br><span class="line">echo -----------------------------------</span><br><span class="line">ARP </span><br><span class="line">echo&#x3D;</span><br><span class="line">echo -----------------------------------</span><br><span class="line">PAUSE</span><br></pre></td></tr></table></figure><p>系统相关</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@ECHO OFF</span><br><span class="line">TITLE BAT脚本例子5</span><br><span class="line">COLOR A</span><br><span class="line">echo -----------BAT脚本例子5-----------</span><br><span class="line">echo&#x3D; </span><br><span class="line">echo -----------显示计算机用户-----------</span><br><span class="line">NET USER</span><br><span class="line">echo&#x3D;</span><br><span class="line">echo -----------显示进程列表-----------</span><br><span class="line">TASKLIST</span><br><span class="line">echo&#x3D;</span><br><span class="line">echo -----------------------------------</span><br><span class="line">PAUSE</span><br></pre></td></tr></table></figure><pre><code>   最后总结，其实BAT主要是运用DOS命令，所以只要掌握好DOS命令，使用BAT就轻松多了。当然，BAT实际运用并不只是这些简单的命令，还有比较复杂的语法，将在下一篇做介绍。</code></pre>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
